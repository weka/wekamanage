# WMS ks-postinstall script

# install our software in /opt
SYSIMAGE=/mnt/sysimage
REPO=/run/install/repo


# move to /opt
pushd $SYSIMAGE/opt

# unpack tarballs
tar xvf $REPO/tarballs/local-weka-home.tgz
tar xvf $REPO/tarballs/weka-mon.tgz
tar xvf $REPO/tarballs/tools.tgz
tar xvf $REPO/tarballs/wms-gui.tgz
tar xvf $REPO/tarballs/ansible-install.tgz

# copy systemd units, etc.
cp -r $REPO/wekabits $SYSIMAGE/opt

# prep weka-mon
pushd weka-mon
./install.sh
sed -i 's,${PWD},/opt/weka-mon,' docker-compose.yml
popd

# prep lwh
chroot $SYSIMAGE <<EOF
cd /opt/local-weka-home/wekahome_offline
./update_config.sh
EOF
#echo We ae in $PWD
#./update_config.sh
#popd
popd

# install our gui
#cp $REPO/wekabits/wms-gui.service $SYSIMAGE/etc/systemd/system
#cp $REPO/wekabits/weka-firstboot.service $SYSIMAGE/etc/systemd/system
# ^^ now copied from wekabits/etc below

# install our local modifications to /usr and /etc
pushd $REPO/wekabits
cp -r usr $SYSIMAGE
cp -r etc $SYSIMAGE
cp motd $SYSIMAGE/etc
popd

# install ansible install stuff
cp $REPO/wekabits/install-gui.service $SYSIMAGE/etc/systemd/system

# enable docker, cockpit and gui services
chroot $SYSIMAGE systemctl enable docker.socket
chroot $SYSIMAGE systemctl enable cockpit.socket
chroot $SYSIMAGE systemctl enable wms-gui.service
chroot $SYSIMAGE systemctl enable install-gui.service
chroot $SYSIMAGE systemctl enable netissue.service
chroot $SYSIMAGE systemctl enable weka-firstboot.service
chroot $SYSIMAGE systemctl enable docker-clean.timer
chroot $SYSIMAGE systemctl enable docker-clean.service

# below is now also in wekabits/etc
# cp REPO/wekabits/i2c_i801.conf $SYSIMAGE/etc/modprobe.d/

# That's all folks!
